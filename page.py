# Form implementation generated from reading ui file 'Colizeum Tool - untitled.ui'
#
# Created by: PyQt6 UI code generator 6.4.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.
import telebot
import datetime
import sqlite3

from PyQt6.QtCore import QTimer
from PyQt6 import QtCore, QtWidgets
from PyQt6.QtWidgets import QApplication, QMainWindow, QWidget
import sys
from PyQt6 import QtCore, QtGui, QtWidgets



bot = telebot.TeleBot('5834237694:AAE0TJdYohtj69L6jsXmD2MB0vFcsWB8tpA')
############
##Database##
############
conn = sqlite3.connect('CIS_admin_helper.db')
cur = conn.cursor()
cur.execute('CREATE TABLE IF NOT EXISTS inventory(date TEXT, admin TEXT, itog TEXT)')
cur.execute('CREATE TABLE IF NOT EXISTS admin_bar(date TEXT, admin TEXT, position TEXT, value FLOAT, cost FLOAT)')
cur.execute('CREATE TABLE IF NOT EXISTS admins(name TEXT)')
cur.execute('CREATE TABLE IF NOT EXISTS positions (name TEXT, price FLOAT)')
cur.execute('CREATE TABLE IF NOT EXISTS config (parameter TEXT, value TEXT)')

with open('style.css', 'r') as r:
    style = r.read()


class Ui_settings(object):
    def setupUi(self, settings):
        settings.setObjectName("settings")
        settings.resize(850, 900)
        settings.setStyleSheet("QMainWindow{background-image: url(background.png);\nbackground-position: absolute;}")
        self.centralwidget = QtWidgets.QWidget(parent=settings)
        self.centralwidget.setObjectName("centralwidget")
        self.centralwidget.setStyleSheet(style)
        self.verticalLayoutWidget = QtWidgets.QWidget(parent=self.centralwidget)
        self.verticalLayoutWidget.setGeometry(QtCore.QRect(20, 50, 491, 211))
        self.verticalLayoutWidget.setObjectName("verticalLayoutWidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.verticalLayoutWidget)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setObjectName("verticalLayout")

        ##################
        ##Список админов##
        ##################
        self.List_admins_widget = QtWidgets.QListWidget(parent=self.verticalLayoutWidget)
        self.List_admins_widget.setObjectName("List_admins_widget")
        self.List_admins_widget.clicked.connect(self.admin_name_clicked)
        self.verticalLayout.addWidget(self.List_admins_widget)
        cur.execute('SELECT * FROM admins')
        admins = cur.fetchall()
        for admin in admins:
            self.List_admins_widget.addItem(admin[0])

        ########################
        ##Выбранное имя админа##
        ########################
        self.list_admins_label = QtWidgets.QLabel(parent=self.centralwidget)
        self.list_admins_label.setGeometry(QtCore.QRect(20, 20, 281, 17))
        self.list_admins_label.setObjectName("list_admins_label")

        self.horizontalLayoutWidget = QtWidgets.QWidget(parent=self.centralwidget)
        self.horizontalLayoutWidget.setGeometry(QtCore.QRect(20, 270, 321, 31))
        self.horizontalLayoutWidget.setObjectName("horizontalLayoutWidget")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setSpacing(1)
        self.horizontalLayout.setObjectName("horizontalLayout")

        ######################
        ##Текст ошибка админ##
        ######################
        self.error_admin_label =QtWidgets.QLabel(parent=self.centralwidget)
        self.error_admin_label.setVisible(False)
        self.error_admin_label.setGeometry(750,90,61,31)
        self.error_admin_label.setText('Ошибка')
        self.error_admin_label.setStyleSheet("color: rgb(192, 28, 40);")

        ########################
        ##Текст ошибка позиция##
        ########################
        self.error_position_label =QtWidgets.QLabel(parent=self.centralwidget)
        self.error_position_label.setVisible(False)
        self.error_position_label.setGeometry(670,450,61,21)
        self.error_position_label.setText('Ошибка')
        self.error_position_label.setStyleSheet("color: rgb(192, 28, 40);")

        self.name_admin_label = QtWidgets.QLabel(parent=self.horizontalLayoutWidget)
        self.name_admin_label.setVisible(False)
        self.name_admin_label.setObjectName("name_admin_label")
        self.horizontalLayout.addWidget(self.name_admin_label)
        self.del_admin_btn = QtWidgets.QPushButton(parent=self.horizontalLayoutWidget)
        self.del_admin_btn.setVisible(False)
        self.del_admin_btn.setStyleSheet("background-color: rgb(35, 35, 35);\n"
"color: rgb(192, 28, 40);")
        self.del_admin_btn.setObjectName("del_admin_btn")
        self.del_admin_btn.clicked.connect(self.admin_del)
        self.horizontalLayout.addWidget(self.del_admin_btn)
        self.add_admin_label = QtWidgets.QLabel(parent=self.centralwidget)
        self.add_admin_label.setGeometry(QtCore.QRect(530, 20, 171, 17))
        self.add_admin_label.setObjectName("add_admin_label")
        self.horizontalLayoutWidget_2 = QtWidgets.QWidget(parent=self.centralwidget)
        self.horizontalLayoutWidget_2.setGeometry(QtCore.QRect(530, 50, 281, 31))
        self.horizontalLayoutWidget_2.setObjectName("horizontalLayoutWidget_2")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget_2)
        self.horizontalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.Name_add_admin = QtWidgets.QLabel(parent=self.horizontalLayoutWidget_2)
        self.Name_add_admin.setObjectName("Name_add_admin")
        self.horizontalLayout_2.addWidget(self.Name_add_admin)
        self.add_admin_text_field = QtWidgets.QTextEdit(parent=self.horizontalLayoutWidget_2)
        self.add_admin_text_field.setObjectName("add_admin_text_field")
        self.horizontalLayout_2.addWidget(self.add_admin_text_field)
        self.add_admin_btn = QtWidgets.QPushButton(parent=self.horizontalLayoutWidget_2)
        self.add_admin_btn.setEnabled(False)
        self.add_admin_btn.setStyleSheet("color: rgb(69, 186, 4);\n"
"background-color: rgb(35, 35, 35);")
        self.add_admin_btn.setObjectName("add_admin_btn")
        self.add_admin_btn.clicked.connect(self.add_admin)
        self.horizontalLayout_2.addWidget(self.add_admin_btn)
        self.add_admin_text_field.textChanged.connect(self.activate_add_admin)        #Активируем кнопку
        self.item_list = QtWidgets.QLabel(parent=self.centralwidget)
        self.item_list.setGeometry(QtCore.QRect(20, 330, 251, 17))
        self.item_list.setObjectName("item_list")
        self.verticalLayoutWidget_2 = QtWidgets.QWidget(parent=self.centralwidget)
        self.verticalLayoutWidget_2.setGeometry(QtCore.QRect(20, 360, 491, 411))
        self.verticalLayoutWidget_2.setObjectName("verticalLayoutWidget_2")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.verticalLayoutWidget_2)
        self.verticalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        ###########################
        ##Список с позициями бара##
        ###########################
        self.list_item_widget = QtWidgets.QListWidget(parent=self.verticalLayoutWidget_2)
        self.list_item_widget.setObjectName("list_item_widget")
        self.verticalLayout_2.addWidget(self.list_item_widget)
        self.list_item_widget.clicked.connect(self.item_clicked)
        cur.execute('SELECT * FROM positions')
        self.items = cur.fetchall()
        for item in self.items:
            self.list_item_widget.addItem(f'{item[0]} | {item[1]}')


        self.horizontalLayoutWidget_3 = QtWidgets.QWidget(parent=self.centralwidget)
        self.horizontalLayoutWidget_3.setGeometry(QtCore.QRect(20, 780, 321, 31))
        self.horizontalLayoutWidget_3.setObjectName("horizontalLayoutWidget_3")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget_3)
        self.horizontalLayout_3.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        ##################################
        ##Наименование выбранной позиции##
        ##################################
        self.name_item_label = QtWidgets.QLabel(parent=self.horizontalLayoutWidget_3)
        self.name_item_label.setVisible(False)
        self.name_item_label.setObjectName("name_item_label")
        self.horizontalLayout_3.addWidget(self.name_item_label)

        ###########################
        ##Кнопка удаления позиции##
        ###########################
        self.delete_item_btn = QtWidgets.QPushButton(parent=self.horizontalLayoutWidget_3)
        self.delete_item_btn.setVisible(False)
        self.delete_item_btn.setStyleSheet("color: rgb(192, 28, 40);\n"
"background-color: rgb(35, 35, 35);")
        self.delete_item_btn.setObjectName("delete_item_btn")
        self.delete_item_btn.clicked.connect(self.del_item)

        self.horizontalLayout_3.addWidget(self.delete_item_btn)
        self.gridLayoutWidget = QtWidgets.QWidget(parent=self.centralwidget)
        self.gridLayoutWidget.setGeometry(QtCore.QRect(530, 360, 291, 71))
        self.gridLayoutWidget.setObjectName("gridLayoutWidget")
        self.gridLayout = QtWidgets.QGridLayout(self.gridLayoutWidget)
        self.gridLayout.setContentsMargins(0, 0, 0, 0)
        self.gridLayout.setObjectName("gridLayout")
        self.item_name_label = QtWidgets.QLabel(parent=self.gridLayoutWidget)
        self.item_name_label.setObjectName("item_name_label")
        self.gridLayout.addWidget(self.item_name_label, 0, 0, 1, 1)
        self.doubleSpinBox = QtWidgets.QDoubleSpinBox(parent=self.gridLayoutWidget)
        self.doubleSpinBox.setMaximum(99999999.0)
        self.doubleSpinBox.setObjectName("doubleSpinBox")
        self.gridLayout.addWidget(self.doubleSpinBox, 1, 1, 1, 1)
        self.Item_name_field = QtWidgets.QTextEdit(parent=self.gridLayoutWidget)
        self.Item_name_field.setObjectName("Item_name_field")
        self.Item_name_field.textChanged.connect(self.activate_add_item)      #Активируем кнопку
        self.gridLayout.addWidget(self.Item_name_field, 0, 1, 1, 1)

        ###Стоимость позиции
        self.item_cost_label = QtWidgets.QLabel(parent=self.gridLayoutWidget)
        self.item_cost_label.setObjectName("item_cost_label")
        self.gridLayout.addWidget(self.item_cost_label, 1, 0, 1, 1)

        ###Кнопка добавить позицию бара
        self.add_item_btn = QtWidgets.QPushButton(parent=self.centralwidget)
        self.add_item_btn.setEnabled(False)
        self.add_item_btn.setGeometry(QtCore.QRect(740, 450, 80, 25))
        self.add_item_btn.setStyleSheet("color: rgb(69, 186, 4);\n"
"background-color: rgb(35, 35, 35);")
        self.add_item_btn.setObjectName("add_item_btn")
        self.add_item_btn.clicked.connect(self.add_item)

        ##Кнопка назад
        self.to_menu_btn = QtWidgets.QPushButton(parent=self.centralwidget)
        self.to_menu_btn.setGeometry(QtCore.QRect(20, 840, 121, 25))
        self.to_menu_btn.setObjectName("to_menu_btn")
        self.to_menu_btn.setStyleSheet(style)
        self.to_menu_btn.clicked.connect(self.to_menu)


        self.api_label = QtWidgets.QLabel(self.centralwidget)
        self.api_label.setGeometry(QtCore.QRect(300, 840, 160,25))
        self.api_label.setText('Введите API ключ: ')

        self.api_label.setStyleSheet(style)
        self.api_field = QtWidgets.QTextEdit(self.centralwidget)
        self.api_field.setGeometry(QtCore.QRect(460,840,250,30))
        self.api_field.setStyleSheet(style)

        self.api_btn = QtWidgets.QPushButton(self.centralwidget)
        self.api_btn.setGeometry(QtCore.QRect(720,840,100,25))
        self.api_btn.setText('Сохранить')
        self.api_btn.clicked.connect(self.set_api)


        settings.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(parent=settings)
        self.statusbar.setObjectName("statusbar")
        settings.setStatusBar(self.statusbar)

        self.retranslateUi(settings)
        QtCore.QMetaObject.connectSlotsByName(settings)

    def retranslateUi(self, settings):
        _translate = QtCore.QCoreApplication.translate
        settings.setWindowTitle(_translate("settings", "MainWindow"))
        self.list_admins_label.setText(_translate("settings", "Выберите админа из списка"))
        self.name_admin_label.setText(_translate("settings", "Имя"))
        self.del_admin_btn.setText(_translate("settings", "Удалить"))
        self.add_admin_label.setText(_translate("settings", "Добавить админа"))
        self.Name_add_admin.setText(_translate("settings", "Имя:"))
        self.add_admin_btn.setText(_translate("settings", "Добавить"))
        self.item_list.setText(_translate("settings", "Выберите товар из списка"))
        self.name_item_label.setText(_translate("settings", "Позиция"))
        self.delete_item_btn.setText(_translate("settings", "Удалить"))
        self.item_name_label.setText(_translate("settings", "Наименование"))
        self.item_cost_label.setText(_translate("settings", "Цена"))
        self.add_item_btn.setText(_translate("settings", "Добавить"))
        self.to_menu_btn.setText(_translate("settings", "Назад"))

    #####################
    ##Активаторы кнопок##
    #####################
    def activate_add_admin(self):
        self.add_admin_btn.setEnabled(True)

    def activate_add_item(self):
        self.add_item_btn.setEnabled(True)


    ######################################
    ##Добавление/удаление администратора##
    ######################################
    def add_admin(self):
        self.admin_name = self.add_admin_text_field.toPlainText()
        if self.admin_name == '':
            self.error_admin_label.setVisible(True)
        elif self.admin_name == ' ':
            self.error_admin_label.setVisible(True)     
        else:
            cur.execute(f'INSERT INTO admins VALUES("{self.admin_name}")')
            conn.commit()
            self.List_admins_widget.addItem(self.admin_name)
            self.error_admin_label.setVisible(False)
        self.add_admin_text_field.clear()



    def admin_name_clicked(self):
        self.name_admin_label.setVisible(True)
        self.del_admin_btn.setVisible(True)
        name = self.List_admins_widget.currentItem()
        self.name_admin_label.setText(str(name.text()))

    def admin_del(self):
        name = self.List_admins_widget.currentItem()                               #Получаем выбраннй элемент
        el = self.List_admins_widget.indexFromItem(name).row()                     #Получаем его номер
        cur.execute(f'DELETE FROM admins WHERE name LIKE "{str(name.text())}"')    #Закидываем имя в бд
        conn.commit()
        self.List_admins_widget.takeItem(el)                                       #Удаляем из списка
        self.del_admin_btn.setVisible(False)                                       #Офаем кнопку и имя
        self.name_admin_label.setVisible(False)



    def add_item(self):
        item_name = self.Item_name_field.toPlainText()
        item_cost = self.doubleSpinBox.value()
        if item_cost == 0:
            self.error_position_label.setVisible(True)
        elif item_name == '' or item_name == ' ':
            self.error_position_label.setVisible(True)
        else:
            cur.execute(f'INSERT INTO positions VALUES("{item_name}", "{item_cost}")')
            conn.commit()
            self.error_position_label.setVisible(False)
            self.list_item_widget.addItem(f'{item_name} | {item_cost}')
        self.Item_name_field.clear()
        self.doubleSpinBox.setValue(0)


    def item_clicked(self):
        item = self.list_item_widget.currentItem()
        self.name_item_label.setText(str(item.text()))
        self.delete_item_btn.setVisible(True)
        self.name_item_label.setVisible(True)

    def del_item(self):
        item = self.list_item_widget.currentItem()
        item_position = self.list_item_widget.indexFromItem(item).row()
        name = str(item.text()).split(" |")[0]
        cur.execute(f'DELETE FROM positions WHERE name = "{name}"')
        conn.commit()
        self.list_item_widget.takeItem(item_position)
        self.delete_item_btn.setVisible(False)
        self.name_item_label.setVisible(False)

    def set_api(self):
        key = self.api_field.toPlainText()
        cur.execute(f'INSERT OR REPLACE INTO config VALUES ("API", "{key}")')
        conn.commit()

    def to_menu(self):
        settings_window.hide()
        MainWindow.show()



class Ui_Inv_history(object):
    def setupUi(self, Inv_history):
        Inv_history.setObjectName("Inv_history")
        Inv_history.resize(400, 800)
        Inv_history.setStyleSheet("QMainWindow{background-image: url(background.png);\nbackground-position: absolute;}")
        self.centralwidget = QtWidgets.QWidget(parent=Inv_history)
        self.centralwidget.setObjectName("centralwidget")
        self.back = QtWidgets.QPushButton(parent=self.centralwidget)
        self.back.setGeometry(QtCore.QRect(20, 750, 111, 25))
        self.back.setObjectName("back")
        self.back.clicked.connect(self.to_menu)
        self.back.setStyleSheet(style)
        self.textBrowser = QtWidgets.QTextBrowser(parent=self.centralwidget)
        self.textBrowser.setGeometry(QtCore.QRect(20, 20, 350, 711))
        self.textBrowser.setObjectName("textBrowser")
        self.textBrowser.setStyleSheet("background-color: black;\ncolor: white;")
        cur.execute('SELECT * FROM inventory')
        result = cur.fetchall()
        l = 0
        for i in result:
            self.textBrowser.insertPlainText(f'{result[l][0]} - {result[l][1]}\n\n{result[l][2]}\n\n')
            l = l+1
        Inv_history.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(parent=Inv_history)
        self.statusbar.setObjectName("statusbar")
        Inv_history.setStatusBar(self.statusbar)

        self.retranslateUi(Inv_history)
        QtCore.QMetaObject.connectSlotsByName(Inv_history)

    def retranslateUi(self, Inv_history):
        _translate = QtCore.QCoreApplication.translate
        Inv_history.setWindowTitle(_translate("Inv_history", "MainWindow"))
        self.back.setText(_translate("Inv_history", "Назад"))

    def to_menu(self):
        inv_history.hide()
        MainWindow.show()

class Ui_Bar(object):
    def setupUi(self, Bar):
        Bar.setObjectName("Bar")
        Bar.resize(416, 751)
        Bar.setStyleSheet("QMainWindow{background-image: url(background.png);\nbackground-position: absolute;}")
        self.centralwidget = QtWidgets.QWidget(parent=Bar)
        self.centralwidget.setObjectName("centralwidget")
        self.centralwidget.setStyleSheet(style)
        self.send = QtWidgets.QPushButton(parent=self.centralwidget)
        self.send.setGeometry(QtCore.QRect(290, 680, 89, 25))
        self.send.setObjectName("send")
        self.send.setStyleSheet(style)
        self.send.clicked.connect(self.get_result)
        self.back = QtWidgets.QPushButton(parent=self.centralwidget)
        self.back.setGeometry(QtCore.QRect(20, 680, 89, 25))
        self.back.setObjectName("back")
        self.back.setStyleSheet(style)
        self.back.clicked.connect(self.go_back)
        self.horizontalLayoutWidget = QtWidgets.QWidget(parent=self.centralwidget)
        self.horizontalLayoutWidget.setGeometry(QtCore.QRect(20, 20, 371, 31))
        self.horizontalLayoutWidget.setObjectName("horizontalLayoutWidget")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setSpacing(2)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.label = QtWidgets.QLabel(parent=self.horizontalLayoutWidget)
        self.label.setObjectName("label")
        self.horizontalLayout.addWidget(self.label)
        self.comboBox = QtWidgets.QComboBox(parent=self.horizontalLayoutWidget)
        self.comboBox.setCurrentText("")
        self.comboBox.setObjectName("comboBox")
        self.sended_label = QtWidgets.QLabel(self.centralwidget)
        self.sended_label.setGeometry(QtCore.QRect(290, 655, 90,20))
        self.sended_label.setText('Отправлено')
        self.sended_label.setStyleSheet('color: green')
        self.sended_label.setVisible(False)
        cur.execute('SELECT * FROM admins')
        admins = cur.fetchall()
        for admin in admins:
            self.comboBox.addItem(admin[0])
        self.horizontalLayout.addWidget(self.comboBox)
        self.horizontalLayout.setStretch(1, 4)
        self.scrollArea = QtWidgets.QScrollArea(parent=self.centralwidget)
        self.scrollArea.setGeometry(QtCore.QRect(20, 60, 371, 591))
        self.scrollArea.setWidgetResizable(True)
        self.scrollArea.setObjectName("scrollArea")
        self.scrollAreaWidgetContents = QtWidgets.QWidget()
        self.scrollAreaWidgetContents.setGeometry(QtCore.QRect(0, 0, 369, 589))
        self.scrollAreaWidgetContents.setObjectName("scrollAreaWidgetContents")
        self.scrollAreaWidgetContents.setStyleSheet('background-color: black;\ncolor: white;')
        self.grid = QtWidgets.QGridLayout(self.scrollAreaWidgetContents)
        cur.execute('SELECT * FROM positions')
        result = cur.fetchall()
        s = 0
        for i in result:
            object_0 = QtWidgets.QLabel(f'{i[0]}')
            object_0.setStyleSheet('color: white;')
            object_1 = QtWidgets.QDoubleSpinBox()
            object_1.setMaximum(99999)
            object_1.setStyleSheet(style)
            self.grid.addWidget(object_0,s,0)
            self.grid.addWidget(object_1, s, 1)
            s = s + 1
        self.scrollArea.setWidget(self.scrollAreaWidgetContents)
        Bar.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(parent=Bar)
        self.statusbar.setObjectName("statusbar")
        Bar.setStatusBar(self.statusbar)

        self.retranslateUi(Bar)
        QtCore.QMetaObject.connectSlotsByName(Bar)

    def retranslateUi(self, Bar):
        _translate = QtCore.QCoreApplication.translate
        Bar.setWindowTitle(_translate("Bar", "Бар админ"))
        self.send.setText(_translate("Bar", "Отправить"))
        self.back.setText(_translate("Bar", "Назад"))
        self.label.setText(_translate("Bar", "Имя админа"))


    def get_result(self):
        self.sended_label.setVisible(True)
        self.send.setDisabled(True)
        self.send.setStyleSheet('color: white;\nbackground: gray;')
        QTimer.singleShot(1500, self.end_send)
        admin_name = self.comboBox.currentText()
        i = 0
        while i < self.grid.rowCount():
            name = self.grid.itemAtPosition(i, 0)
            name = name.widget().text()
            count = self.grid.itemAtPosition(i, 1)
            count = count.widget().value()
            today = datetime.datetime.now()
            to_insrt = f'{today.year}-{today.month}-{today.day}'
            if count > 0:
                cur.execute(f'SELECT * FROM positions WHERE name = "{str(name)}"')
                res = cur.fetchall()
                cur.execute(f'INSERT INTO admin_bar VALUES("{to_insrt}", "{admin_name}", "{name}", "{count}", "{res[0][1]}")')
                conn.commit()
            i = i +1

    def end_send(self):
        self.sended_label.setVisible(False)
        self.send.setStyleSheet(style)
        self.send.setDisabled(False)

    def go_back(self):
        window_bar.close()
        MainWindow.show()


class Inventory(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.setEnabled(True)
        MainWindow.resize(616, 797)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Fixed, QtWidgets.QSizePolicy.Policy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(MainWindow.sizePolicy().hasHeightForWidth())
        MainWindow.setSizePolicy(sizePolicy)
        MainWindow.setLayoutDirection(QtCore.Qt.LayoutDirection.LeftToRight)
        MainWindow.setAutoFillBackground(False)
        MainWindow.setStyleSheet("QMainWindow{background-image: url(background.png);\nbackground-position: absolute;}")
        self.centralwidget = QtWidgets.QWidget(parent=MainWindow)
        self.centralwidget.setStyleSheet(style)
        self.centralwidget.setObjectName("centralwidget")
        self.pushButton = QtWidgets.QPushButton(parent=self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(20, 720, 89, 25))
        self.pushButton.setObjectName("pushButton")
        self.pushButton.setStyleSheet(style)
        self.pushButton.clicked.connect(self.go_back)
        self.pushButton_2 = QtWidgets.QPushButton(parent=self.centralwidget)
        self.pushButton_2.setGeometry(QtCore.QRect(490, 720, 89, 25))
        self.pushButton_2.setObjectName("pushButton_2")
        self.pushButton_2.setStyleSheet(style)
        self.pushButton_2.clicked.connect(self.get_result)
        self.in_prog_label = QtWidgets.QLabel(parent=self.centralwidget)
        self.in_prog_label.setGeometry(QtCore.QRect(20, 30, 101, 31))
        font = QtGui.QFont()
        font.setPointSize(18)
        self.in_prog_label.setFont(font)
        self.in_prog_label.setObjectName("in_prog_label")
        self.at_club_label = QtWidgets.QLabel(parent=self.centralwidget)
        self.at_club_label.setGeometry(QtCore.QRect(340, 20, 131, 41))
        font = QtGui.QFont()
        font.setPointSize(18)
        self.at_club_label.setFont(font)
        self.at_club_label.setObjectName("at_club_label")
        self.label_name_admin = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_name_admin.setGeometry(QtCore.QRect(20, 650, 161, 31))
        self.label_name_admin.setObjectName("label_name_admin")
        self.scrollArea = QtWidgets.QScrollArea(parent=self.centralwidget)
        self.scrollArea.setGeometry(QtCore.QRect(20, 70, 250, 540))
        self.scrollArea.setWidgetResizable(True)
        self.scrollArea.setObjectName("scrollArea")
        self.content_widget = QtWidgets.QWidget()
        self.content_widget.setGeometry(QtCore.QRect(0, 0, 248, 538))
        self.content_widget.setObjectName("content_widget")
        self.content_widget.setStyleSheet("background-color: black;\ncolor: white;\nborder-color: rgb(245, 232, 50);")
        self.grid = QtWidgets.QGridLayout(self.content_widget)
        self.label_1 = QtWidgets.QLabel('Label')
        cur.execute('SELECT * FROM positions')
        result = cur.fetchall()
        self.dic = {}
        s = 0
        for i in result:
            self.dic[str(i)] = QtWidgets.QLabel(f'{i[0]}')
            object_1 = QtWidgets.QDoubleSpinBox()
            object_1.setStyleSheet(style)
            object_1.setMaximum(99999)
            self.grid.addWidget(self.dic[str(i)], s, 0)
            self.grid.addWidget(object_1, s, 1)
            s = s+1
        self.scrollArea.setWidget(self.content_widget)
        self.scrollArea_2 = QtWidgets.QScrollArea(parent=self.centralwidget)
        self.scrollArea_2.setGeometry(QtCore.QRect(340, 70, 250, 540))
        self.scrollArea_2.setWidgetResizable(True)
        self.scrollArea_2.setObjectName("scrollArea_2")
        self.content_widget_1 = QtWidgets.QWidget()
        self.content_widget_1.setGeometry(QtCore.QRect(0, 0, 248, 538))
        self.content_widget_1.setObjectName("content_widget_1")
        self.content_widget_1.setStyleSheet("background-color: black;\ncolor: white;")
        self.grid_1 = QtWidgets.QGridLayout(self.content_widget_1)
        self.send_label = QtWidgets.QLabel(self.centralwidget)
        self.send_label.setGeometry(QtCore.QRect(490,690,90,20))
        self.send_label.setStyleSheet('color: green;')
        self.send_label.setObjectName('send_label')
        self.send_label.setVisible(False)
        s = 0
        for i in result:
            object_0 = QtWidgets.QLabel(f'{i[0]}')
            object_1 = QtWidgets.QDoubleSpinBox()
            object_1.setStyleSheet(style)
            object_1.setMaximum(99999)
            self.grid_1.addWidget(object_0, s, 0)
            self.grid_1.addWidget(object_1, s, 1)
            s = s+1
        self.scrollArea_2.setWidget(self.content_widget_1)
        self.comboBox = QtWidgets.QComboBox(parent=self.centralwidget)
        self.comboBox.setGeometry(QtCore.QRect(190, 650, 201, 31))
        self.comboBox.setObjectName("comboBox")
        self.comboBox.setStyleSheet(style)
        cur.execute('SELECT * FROM admins')
        admins = cur.fetchall()
        for admin in admins:
            self.comboBox.addItem(admin[0])
        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Colizeum Tool"))
        self.send_label.setText(_translate('MainWindow', "Отправлено"))
        self.pushButton.setText(_translate("MainWindow", "Назад"))
        self.pushButton_2.setText(_translate("MainWindow", "Отправить"))
        self.in_prog_label.setText(_translate("MainWindow", "В проге"))
        self.at_club_label.setText(_translate("MainWindow", "На складе"))
        self.label_name_admin.setText(_translate("MainWindow", "Имя администратора:"))

    def get_result(self):
        admin_name = self.comboBox.currentText()


        i = 0
        today = datetime.datetime.now()
        date = f'{today.year}-{today.month}-{today.day}'
        self.to_insrt = f'{today.year}-{today.month}-{today.day}\n\n{admin_name}\n\n'
        to_bd = ''
        while i < self.grid.rowCount():
            name = self.grid.itemAtPosition(i,0)
            name = name.widget().text()
            in_program = self.grid.itemAtPosition(i,1)
            in_program = in_program.widget()

            at_club = self.grid_1.itemAtPosition(i,1)
            at_club = at_club.widget()

            itog = at_club.value() - in_program.value()
            i = i +1

            self.to_insrt += f'{name}:   {itog}\n'
            to_bd += f'{name}:   {itog}\n'
        cur.execute(f'INSERT INTO inventory VALUES("{date}", "{admin_name}", "{to_bd}")')
        conn.commit()
        self.send_tg()

    def go_back(self):  #Кнопка назад (на винде криво работает)
        window_inv.hide()
        MainWindow.show()

    def send_tg(self):          #Отправка в телегу
        self.pushButton_2.setDisabled(True)
        self.send_label.setVisible(True)
        self.pushButton_2.setStyleSheet('background: gray;\ncolor: white;')
        QTimer.singleShot(1500, self.deactivate_btn)
        bot.send_message(412997019, self.to_insrt)

    def deactivate_btn(self):
        self.pushButton_2.setStyleSheet('style')
        self.pushButton_2.setDisabled(False)

class Ui_MainWindow(object):                #Основное окно (меню)
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.setEnabled(True)
        MainWindow.resize(600, 800)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Fixed, QtWidgets.QSizePolicy.Policy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(MainWindow.sizePolicy().hasHeightForWidth())
        MainWindow.setSizePolicy(sizePolicy)
        MainWindow.setLayoutDirection(QtCore.Qt.LayoutDirection.LeftToRight)
        MainWindow.setAutoFillBackground(False)
        MainWindow.setStyleSheet("QMainWindow{background-image: url(background.png);\nbackground-position: absolute;}")
        self.centralwidget = QtWidgets.QWidget(parent=MainWindow)
        self.centralwidget.setStyleSheet("")
        self.centralwidget.setObjectName("centralwidget")
        self.pushButton = QtWidgets.QPushButton(parent=self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(170, 100, 260, 30))
        self.pushButton.setStyleSheet("background-color: rgb(245, 232, 50);\n"
"color: rgb(0, 0, 0);")
        self.pushButton.setObjectName("Inventarization")
        self.pushButton.clicked.connect(self.invent)
        self.pushButton_2 = QtWidgets.QPushButton(parent=self.centralwidget)
        self.pushButton_2.setGeometry(QtCore.QRect(170, 170, 260, 30))
        self.pushButton_2.setStyleSheet("background-color: rgb(245, 232, 50);\n"
"color: rgb(0, 0, 0);")
        self.pushButton_2.setObjectName("pushButton_2")
        self.pushButton_2.clicked.connect(self.bar_administrator)
        self.pushButton_3 = QtWidgets.QPushButton(parent=self.centralwidget)
        self.pushButton_3.setGeometry(QtCore.QRect(170, 240, 260, 30))
        self.pushButton_3.setStyleSheet("background-color: rgb(245, 232, 50);\n"
"color: rgb(0, 0, 0);")
        self.pushButton_3.setObjectName("pushButton_3")
        self.pushButton_3.clicked.connect(self.history_inv)
        self.exit_btn = QtWidgets.QPushButton(parent=self.centralwidget)
        self.exit_btn.setGeometry(QtCore.QRect(170, 700, 260, 30))
        self.exit_btn.setStyleSheet("background-color: rgb(245, 232, 50);\n"
"color: rgb(0, 0, 0);")
        self.exit_btn.setObjectName("exit_btn")
        self.exit_btn.clicked.connect(self.exit)
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(parent=MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        ###################
        ##Кнопка настроек##
        ###################
        self.settings_btn = QtWidgets.QPushButton(parent=self.centralwidget)
        self.settings_btn.setGeometry(QtCore.QRect(170, 630, 260, 30))
        self.settings_btn.setStyleSheet("background-color: rgb(245, 232, 50);\n"
"color: rgb(0, 0, 0);")
        self.settings_btn.setObjectName("setting_btn")
        self.settings_btn.clicked.connect(self.settings)
        

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)


    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Colizeum Tool"))
        self.settings_btn.setText(_translate('Mainwindow', "Настройки"))
        self.pushButton.setText(_translate("MainWindow", "Инвентаризация"))
        self.pushButton_2.setText(_translate("MainWindow", "Бар администратор"))
        self.pushButton_3.setText(_translate("MainWindow", "История инвентаризаций"))
        self.exit_btn.setText(_translate("MainWindow", "Выход"))

    def invent(self):
        MainWindow.hide()
        window_inv.show()

    def bar_administrator(self):
        MainWindow.hide()
        window_bar.update()
        window_bar.show()
        
    def history_inv(self):
        MainWindow.hide()
        inv_history.show()

    def settings(self):
        MainWindow.hide()
        settings_window.show()

    def exit(self):
        MainWindow.close()
        

Stylesheet = "TitleBar {background-color: rgb(54, 157, 180);}"

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    app.setStyleSheet(Stylesheet)
    

    bar = Ui_Bar()

    #################
    ##Основное окно##
    #################
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)

    ##########################
    ##История инвентаризаций##
    ##########################
    inv_history = QtWidgets.QMainWindow()
    inv_hist_ui = Ui_Inv_history()
    inv_hist_ui.setupUi(inv_history)

    #######################
    ##Окно инвентаризации##
    #######################
    window_inv = QtWidgets.QMainWindow()
    inv = Inventory()
    inv.setupUi(window_inv)

    ##########################
    ##Окно бар администратор##
    ##########################
    window_bar = QtWidgets.QMainWindow()
    bar_wndw = Ui_Bar()
    bar_wndw.setupUi(window_bar)

    #################
    ##Окно настроек##
    #################
    settings_window = QtWidgets.QMainWindow()
    stngs_wndw = Ui_settings()
    stngs_wndw.setupUi(settings_window)

    MainWindow.show()
    sys.exit(app.exec())
    bot.polling(none_stop=True, interval=0)


